@sm: ~'min-width: 768px';
@md: ~'min-width: 1024px';
@lg: ~'min-width: 1440px';

@smx: ~'max-width: 767px';
@mdx: ~'max-width: 1023px';
@lgx: ~'min-width: 1439px';

:root {
	--cw: none;
	
	@media (@sm) {
		--cw: 736px;
	}
	@media (@md) {
		--cw: 974px;
	}
	@media (@lg) {
		--cw: 1314px;
	}
}

.container {
	@p: 16px;
	
	max-width: var(--cw);
	display: flex;
	flex-direction: column;
	width: 100%;
	padding-left: @p;
	padding-right: @p;
	margin-left: auto;
	margin-right: auto;
}

.r() {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
}

.c() {
	display: flex;
	flex-direction: column;
}

.cc(@align: center) {
	.c();
	justify-content: center;
	align-items: center;
	text-align: @align;
}

.cell(@col: none, @res: 0) {
	.basis() {
		& when (@col = auto) {
			basis: auto;
			max-width: 100%;
		}
		& when (isnumber(@col)) {
			basis: (100% / (12 / @col));
			max-width: (100% / (12 / @col));
		}
	}
	
	& when (@col = none) {
		flex-basis: 0;
		flex-grow: 1
	}
	
	& when not((@col = none)) {
		.return() {
			flex: 0 0 .basis()[basis];
			max-width: .basis()[max-width];
		}
		
		& when (@res = 0) {
			.return();
		}
		& when not((@res = 0)) {
			@media (~'@{res}') {
				.return();
			}
		}
	}
}

.grid(@xgap: 16px, @ygap: @xgap) {
	.r();
	margin: -@ygap -@xgap;
	
	> * {
		.c();
		max-width: 100%;
		padding: @ygap @xgap;
	}
}
